---
import PMenu from "@src/components/generic/PMenu.astro";
import PSvg from "@src/components/generic/PSvg.astro";
import { addTrailingSlash } from "@src/i18n";
import { localizePath } from "astro-i18next";
import i18next, { t } from "i18next";

const { language } = i18next;
---

<!-- Auth Component -->
<a
  class="btn btn-outline"
  id="sign-in-button"
  type="button"
  href=`${addTrailingSlash(localizePath("/signin", language))}?return=${addTrailingSlash(Astro.url.pathname)}`
  >{t("components.auth.sign-in")}</a
>
<PMenu>
  <button
    slot="menu-heading"
    type="button"
    id="profile-menu"
    class="btn btn-ghost btn-square hidden"
    tabindex="0"
    title="Profile"
    aria-label="Profile"
  >
    <PSvg name="profile" svgClass="h-10" />
  </button>
  <div slot="menu-content" role="menu" class="bg-base-200 ltr:right-0 rtl:left-0" aria-labelledby="profile-menu">
    <ul>
      <li><a role="menuitem" href="/">Item 1</a></li>
      <li><a role="menuitem" href="/">Item 2</a></li>
    </ul>
  </div>
</PMenu>

<script>
  import { AuthLocalStore, authLocalStore } from "@src/services/auth/authStore";

  const headerComponent = "headerComponent";

  // Elements Update
  const updateAuthElements = function updateAuthElements(): void {
    // Intended.
  };

  // View Update
  const initView = function initView(): void {
    // Intended.
  };

  const updateLoginView = function updateLoginView(newKey: string): void {
    console.log(`updateLoginView: ${newKey}`);
  };

  // State Update

  // Events
  const onChangeAuthLocalStore = function onChangeAuthLocalStore(
    key: keyof AuthLocalStore,
    value: AuthLocalStore[keyof AuthLocalStore] | undefined,
    source?: string,
  ): void {
    if (source === headerComponent || typeof value === "undefined") return;

    if (key === "debugDoNotRedirectAfterSigninCallback") {
      const newValue: string = value.toString();
      updateLoginView(newValue);
    }
  };

  // Init
  initView();
  updateAuthElements();

  authLocalStore.listen(onChangeAuthLocalStore);
</script>
