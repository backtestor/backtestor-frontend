---
import PMenu from "@components/generic/PMenu.astro";
import PSvg from "@components/generic/PSvg.astro";
import { t } from "i18next";
---

<!-- Auth Component -->
<button class="btn btn-outline" id="sign-in-button" type="button">{t("components.auth.sign-in")}</button>
<PMenu>
  <button
    slot="menu-heading"
    type="button"
    id="profile-menu"
    class="btn btn-ghost btn-square hidden"
    tabindex="0"
    title="Profile"
    aria-label="Profile"
  >
    <PSvg name="profile" svgClass="h-10" />
  </button>
  <div slot="menu-content" role="menu" class="bg-base-200 ltr:right-0 rtl:left-0" aria-labelledby="profile-menu">
    <ul>
      <li><a role="menuitem" href="/">Item 1</a></li>
      <li><a role="menuitem" href="/">Item 2</a></li>
    </ul>
  </div>
</PMenu>

<script>
  import { AppStore, appStore } from "@services/stores/appStore";
  import { defineMsaAuth, msaAuthOptions } from "@src/services/auth/msaAuth";
  import { RedirectRequest } from "@src/services/auth/request";

  const headerComponent = "headerComponent";
  const signInButton = document.getElementById("sign-in-button") as HTMLElement;

  // Functions
  const signInMsa = function signIn(): void {
    const options = msaAuthOptions;
    const auth = defineMsaAuth(options);

    const request: RedirectRequest = {
      scopes: import.meta.env.PUBLIC_MSA_SCOPES.split(" "),
    };
    auth.loginRedirect(request);
  };

  // Elements Update
  const updateAuthElements = function updateSpeedLimitElements(): void {
    // Intended.
  };

  // View Update
  const initView = function initView(): void {};

  const updateLoginView = function updateLoginView(newKey: string): void {
    console.log(`updateLoginView: ${newKey}`);
  };

  // State Update

  // Events
  const onClickSignIn = function onClickSignIn(event: Event): void {
    if (!event.currentTarget) return;

    signInMsa();
  };

  const onChangeAppStore = function onChangeAppStore(
    key: keyof AppStore,
    value: AppStore[keyof AppStore] | undefined,
    source?: string,
  ): void {
    if (source === headerComponent || typeof value === "undefined") return;

    if (key === "jwtToken") {
      const newValue = value.toString();
      updateLoginView(newValue);
    }
  };

  // Init
  initView();
  updateAuthElements();

  signInButton.addEventListener("click", onClickSignIn, { passive: true });

  appStore.listen(onChangeAppStore);

  console.log(`Mode: ${import.meta.env.MODE}`);
  console.log(`Production: ${import.meta.env.PROD}`);
  console.log(`Development: ${import.meta.env.DEV}`);
  console.log(`Base URL: ${import.meta.env.BASE_URL}`);
  console.log(`Site: ${import.meta.env.SITE}`);
  console.log(`ClientId: ${import.meta.env.PUBLIC_MSA_CLIENT_ID}`);
  console.log(`Authority: ${import.meta.env.PUBLIC_MSA_AUTHORITY}`);
  console.log(`RedirectUri: ${import.meta.env.PUBLIC_MSA_REDIRECT_URI}`);
  console.log(`PostLogoutRedirectUri: ${import.meta.env.PUBLIC_MSA_POST_LOGOUT_REDIRECT_URI}`);
</script>
